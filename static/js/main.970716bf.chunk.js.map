{"version":3,"sources":["store/user/actions.ts","components/estaticos/navbar/Navbar.tsx","components/estaticos/footer/Footer.tsx","services/Service.ts","components/postagens/listapostagem/ListaPostagem.tsx","components/postagens/tabpostagem/TabPostagem.tsx","components/postagens/cadastroPost/CadastroPost.tsx","components/postagens/modalPostagem/modalPostagem.tsx","paginas/home/Home.tsx","paginas/login/Login.tsx","paginas/cadastroUsuario/CadastroUsuario.tsx","components/temas/listatema/ListaTema.tsx","components/postagens/deletarPostagem/DeletarPostagem.tsx","components/temas/deletarTema/DeletarTema.tsx","components/temas/cadastroTema/CadastroTema.tsx","store/user/userReducer.ts","store/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["addToken","token","type","payload","Navbar","navbarComponent","useSelector","state","tokens","history","useHistory","dispatch","useDispatch","AppBar","position","className","Box","style","cursor","justifyContent","Typography","variant","color","align","gutterBottom","Toolbar","display","to","mx","onClick","toast","info","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","push","Footer","footerComponent","Grid","container","direction","alignItems","item","xs","paddingTop","href","target","api","axios","create","baseURL","login","url","dados","setDado","a","post","resposta","data","cadastroUsuario","busca","header","get","buscaId","put","deleteId","delete","ListaPostagem","useState","posts","setPosts","headers","tipos","useEffect","error","getPost","length","map","m","Card","CardContent","component","titulo","texto","tema","descricao","CardActions","mb","id","Button","size","TabPostagem","value","setValue","TabContext","Tabs","centered","indicatorColor","onChange","event","newValue","Tab","label","TabPanel","flexWrap","CadastroPost","useParams","temas","setTemas","setTema","postagem","setPostagem","updatedPostagem","e","name","preventDefault","success","back","getTemas","findByIdPostagem","Container","maxWidth","onSubmit","TextField","margin","fullWidth","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","getModalStyle","top","left","transform","useStyles","makeStyles","createStyles","paper","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ModalPostagem","classes","React","modalStyle","open","setOpen","handleClose","body","Modal","onClose","aria-labelledby","aria-describedby","Home","paddingX","marginRight","src","alt","height","Login","setToken","usuario","senha","userLogin","setUserLogin","updatedModel","marginTop","textAlign","CadastroUsuario","confirmarSenha","setConfirmarSenha","nome","user","setUser","userResult","setUserResult","confirmarSenhaHandle","ListaTema","tipo","getTema","DeletarPostagem","findById","ml","DeletarTema","CadastroTema","console","log","JSON","stringify","updatedTema","initialState","names","store","createStore","action","App","basename","process","minHeight","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.970716bf.chunk.js","sourcesContent":["export type Action = {type: \"ADD_TOKEN\"|\"ADD_NAME\"|\"ADD_TIPO\"; payload: string};\r\n\r\nexport const addToken = (token: string): Action =>({\r\n    type: \"ADD_TOKEN\",\r\n    payload: token,\r\n});\r\n\r\nexport const addName = (name: string): Action =>({\r\n    type: \"ADD_NAME\",\r\n    payload: name,\r\n});\r\n// addicione o action para o tipo de usuario\r\nexport const addTipo = (tipo: string): Action =>({\r\n    type: \"ADD_TIPO\",\r\n    payload: tipo,\r\n});","import React from 'react';\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Box } from '@material-ui/core';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToken } from '../../../store/user/actions';\r\nimport { UserState } from '../../../store/user/userReducer';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction Navbar() {\r\n\r\n    const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n        );\r\n    let history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    function goLogout(){\r\n        dispatch(addToken(''))\r\n        toast.info('Usuário Deslogado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme:\"colored\",\r\n            progress: undefined,\r\n        })\r\n        history.push('/logar')\r\n    }\r\n\r\n    var navbarComponent;\r\n\r\n    if(token!=''){\r\n        navbarComponent = <AppBar position=\"static\" className='navbar-color' >\r\n        <Box style={{ cursor: \"pointer\" }} justifyContent=\"center\">\r\n                    <Typography variant=\"h5\" color=\"inherit\" align='center'gutterBottom>\r\n                        Relatos Lunaris\r\n                    </Typography>\r\n                </Box>\r\n                <Box justifyContent=\"center\">\r\n            <Toolbar variant=\"dense\" >\r\n                <Box display=\"flex\" justifyContent=\"center\"> \r\n                <Link to='/home' className='text-decorator-none'>\r\n                    <Box mx={1} className='cursor' justifyContent='flex-start'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            home\r\n                        </Typography>\r\n                    </Box>\r\n                    </Link>\r\n                    <Link to='/postagens' className='text-decorator-none'>\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            postagens\r\n                        </Typography>\r\n                    </Box>\r\n                    </Link>\r\n                    <Link to='/tema' className='text-decorator-none'>\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            temas\r\n                        </Typography>\r\n                    </Box>\r\n                    </Link>\r\n                    <Link to='/formularioTema' className='text-decorator-none'>\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            novo tema\r\n                        </Typography>\r\n                    </Box>\r\n                    </Link>\r\n                        <Box mx={1} className='cursor' onClick={goLogout} justifyContent='flex-end'>\r\n                            <Typography variant=\"h6\" color=\"inherit\" justifyContent='flex-end'>\r\n                                logout\r\n                            </Typography>\r\n                        </Box>\r\n                </Box>\r\n            </Toolbar>\r\n            </Box>\r\n            \r\n        </AppBar>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {navbarComponent}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {Typography, Box, Grid } from '@material-ui/core';\r\nimport './Footer.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../../store/user/userReducer';\r\n\r\nfunction Footer() {\r\n\r\n    const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n        );\r\n\r\n        var footerComponent;\r\n\r\n        if(token!=''){\r\n            footerComponent=  <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Grid alignItems=\"center\" item xs={12}>\r\n                <Box className='box1'>\r\n                    <Box paddingTop={1} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <Typography variant=\"h5\" align=\"center\" gutterBottom style={{ color: \"white\" }}>Siga-nos nas redes sociais: </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <a href=\"\" target=\"_blank\">\r\n                            <FacebookIcon className='icones'/>\r\n                        </a>\r\n                        <a href=\"\" target=\"_blank\">\r\n                            <InstagramIcon className='icones'/>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n                <Box className='box2'>\r\n                    <Box paddingTop={1}>\r\n                        <Typography variant=\"subtitle2\" align=\"center\" gutterBottom className='cor'>© 2020 Copyright:</Typography>\r\n                    </Box>\r\n                    <Box>\r\n                            <Typography variant=\"subtitle2\" gutterBottom className='cor' align=\"center\">Todos os direitos reservados a Bruno Muraro</Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n        }\r\n\r\n    return (\r\n        <>\r\n       {footerComponent}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import axios from 'axios';\r\n\r\nexport const api = axios.create({baseURL: 'https://relatoslunaris.herokuapp.com/'})\r\n\r\nexport const login = async(url: any, dados: any, setDado: any) => {const resposta = await api.post(url, dados)\r\n setDado(resposta.data.token)}\r\n\r\nexport const cadastroUsuario = async(url: any, dados: any, setDado: any) => {const resposta = await api.post(url, dados)\r\n    setDado(resposta.data)}\r\n\r\nexport const busca = async(url: any, setDado: any, header: any) => {const resposta = await api.get(url, header)\r\n      setDado(resposta.data)}\r\n\r\n      export const buscaId = async(url: any,setDado: any, header: any) => { \r\n        const resposta = await api.get(url,header)\r\n        setDado(resposta.data)\r\n    }\r\n\r\n    export const post = async(url: any, dados: any, setDado: any, header: any) => { \r\n        const resposta = await api.post(url,dados,header)\r\n        setDado(resposta.data)\r\n    }\r\n\r\n    export const put = async(url: any, dados: any, setDado: any, header: any) => { \r\n        const resposta = await api.put(url,dados,header)\r\n        setDado(resposta.data)\r\n    }\r\n\r\n    export const deleteId = async(url: any,header: any) => { \r\n        await api.delete(url,header)\r\n    }","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Box, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport './ListaPostagem.css';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../../store/user/userReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ListaPostagem() {\r\n\r\n  const [posts, setPosts] = useState<Postagem[]>([])\r\n  let history = useHistory()\r\n\r\n  const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n    );\r\n  const tipo = useSelector<UserState, UserState[\"tipos\"]>(\r\n      (state) => state.tipos\r\n    );\r\n\r\n  useEffect(()=>{\r\n    if(token==''){\r\n      toast.error('Você precisa estar logado', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme:\"colored\",\r\n        progress: undefined,\r\n    })\r\n      history.push('/logar')\r\n    }\r\n  }, [token])\r\n\r\n  async function getPost(){\r\n    await busca('/postagens', setPosts, {\r\n      headers:{'Authorization': token}\r\n    })\r\n  }\r\n\r\n  useEffect (()=>{\r\n    getPost()\r\n  },[posts.length])\r\n\r\n  return (\r\n    <>\r\n    {\r\n      posts.map(post =>(\r\n      <Box m={2} >\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Postagens\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {post.titulo}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {post.texto}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {post.tema?.descricao}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1.5}>\r\n\r\n              <Link to={`/formularioPostagem/${post.id}`} className=\"text-decorator-none\" >\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                    atualizar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n              <Link to={`/deletarPostagem/${post.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                    deletar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n      ))\r\n      }\r\n    </>)\r\n}\r\n\r\nexport default ListaPostagem;","import React, {useState} from 'react'\r\nimport { AppBar, Tab, Tabs, Typography, Box } from '@material-ui/core';\r\nimport { TabContext, TabPanel } from '@material-ui/lab';\r\nimport ListaPostagem from '../listapostagem/ListaPostagem';\r\nimport './TabPostagem.css';\r\n\r\n\r\nfunction TabPostagem() {\r\n    const [value, setValue] = useState('1')\r\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string){\r\n        setValue(newValue);\r\n    }\r\n  return (\r\n    <>\r\n      <TabContext value={value}>\r\n        <AppBar position=\"static\" className='navbar-color'>\r\n          <Tabs centered indicatorColor=\"primary\" onChange={handleChange}>\r\n            <Tab label=\"Todas as postagens\" value=\"1\"/>\r\n            <Tab label=\"Sobre-nós\" value=\"2\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value=\"1\" >\r\n          <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\r\n            <ListaPostagem />\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value=\"2\">\r\n          <Typography variant=\"h5\" gutterBottom color=\"textPrimary\" component=\"h5\" align=\"center\" className=\"titulo\">Sobre-nós</Typography>\r\n          <Typography variant=\"body1\" gutterBottom color=\"textPrimary\" align=\"justify\">Somos um grupo de apreciadores de histórias de terror ao luar. Temos essa plataforma para que vocês possam compartilhar conosco e com o universo suas experiências mais assustadoras! Se são verídicos ou não, os relatos lunares descritos aqui? Bem... talvez seja melhor não sabermos. Venha, junte-se a nós e eternize o seu relato conosco!  </Typography>\r\n        </TabPanel>\r\n      </TabContext>\r\n    </>\r\n  );\r\n}\r\nexport default TabPostagem;","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\"\r\nimport './CadastroPost.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Tema from '../../../models/Tema';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca, buscaId, post, put } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../../store/user/userReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CadastroPost() {\r\n\r\n    let history = useHistory();\r\n    const { id } = useParams<{ id: string }>();\r\n    const [temas, setTemas] = useState<Tema[]>([])\r\n    const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n        );\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme:\"colored\",\r\n                progress: undefined,\r\n            })\r\n            history.push(\"/login\")\r\n\r\n        }\r\n    }, [token])\r\n\r\n    const [tema, setTema] = useState<Tema>(\r\n        {\r\n            id: 0,\r\n            descricao: ''\r\n        })\r\n    const [postagem, setPostagem] = useState<Postagem>({\r\n        id: 0,\r\n        titulo: '',\r\n        texto: '',\r\n        tema: null\r\n    })\r\n\r\n    useEffect(() => { \r\n        setPostagem({\r\n            ...postagem,\r\n            tema: tema\r\n        })\r\n    }, [tema])\r\n\r\n    useEffect(() => {\r\n        getTemas()\r\n        if (id !== undefined) {\r\n            findByIdPostagem(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function getTemas() {\r\n        await busca(\"/tema\", setTemas, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function findByIdPostagem(id: string) {\r\n        await buscaId(`postagens/${id}`, setPostagem, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedPostagem(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setPostagem({\r\n            ...postagem,\r\n            [e.target.name]: e.target.value,\r\n            tema: tema\r\n        })\r\n\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (id !== undefined) {\r\n            put(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Postagem atualizada com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme:\"colored\",\r\n                progress: undefined,\r\n            })\r\n        } else {\r\n            post(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Postagem cadastrada com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme:\"colored\",\r\n                progress: undefined,\r\n            })\r\n        }\r\n        back()\r\n\r\n    }\r\n\r\n    function back() {\r\n        history.push('/postagens')\r\n    }\r\n \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro postagem</Typography>\r\n                <TextField value={postagem.titulo} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"titulo\" label=\"titulo\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\r\n                <TextField value={postagem.texto} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"texto\" label=\"texto\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n\r\n                <FormControl >\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Tema </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        onChange={(e) => buscaId(`/tema/${e.target.value}`, setTema, {\r\n                            headers: {\r\n                                'Authorization': token\r\n                            }\r\n                        })}>\r\n                        {\r\n                            temas.map(tema => (\r\n                                <MenuItem value={tema.id}>{tema.descricao}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                    <FormHelperText>Escolha um tema para a postagem</FormHelperText>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Finalizar\r\n                    </Button>\r\n                </FormControl>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default CadastroPost;","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {Button,Box } from \"@material-ui/core\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './modalPostagem.css';\r\nimport CadastroPost from '../cadastroPost/CadastroPost';\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 ;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction ModalPostagem () {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" className=\"cursor\">\r\n        <CloseIcon onClick={handleClose}/>\r\n      \r\n      </Box>\r\n      \r\n      <CadastroPost/>\r\n      \r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className=\"btnModal\"\r\n        onClick={handleOpen}>Nova Postagem</Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default ModalPostagem","import React, { useEffect } from 'react';\r\nimport {Typography, Box, Grid, Button} from '@material-ui/core';\r\nimport './Home.css';\r\nimport TabPostagem from '../../components/postagens/tabpostagem/TabPostagem';\r\nimport ModalPostagem from '../../components/postagens/modalPostagem/modalPostagem';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../store/user/userReducer';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Home() {\r\n\r\n    let history = useHistory();\r\n    const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n    );\r\n    \r\n    useEffect(() => {\r\n      if (token == \"\") {\r\n        toast.error('Você precisa estar logado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme:\"colored\",\r\n            progress: undefined,\r\n        })\r\n          history.push(\"/login\")\r\n  \r\n      }\r\n  }, [token])\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className='caixa'>\r\n                <Grid alignItems=\"center\" item xs={6}>\r\n                    <Box paddingX={20} >\r\n                        <Typography variant=\"h3\" gutterBottom color=\"textPrimary\" component=\"h3\" align=\"center\" className='texto'>A lua está cheia de mistérios!</Typography>\r\n                        <Typography variant=\"h5\" gutterBottom color=\"textPrimary\" component=\"h5\" align=\"center\" className='texto'>Compartilhe conosco suas histórias macabras</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Box marginRight={1}>\r\n                            <ModalPostagem />\r\n                        </Box>\r\n                        <Link to='/postagens' className='text-decorator-none'>\r\n                        <Button variant=\"outlined\" className='botao'>Ver Histórias</Button>\r\n                        </Link>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6} >\r\n                    <img src=\"https://i.imgur.com/XCiy7lA.jpg\" alt=\"\" width=\"500px\" height=\"500px\" />\r\n                </Grid>\r\n                <Grid xs={12} className='post'>\r\n                    <TabPostagem />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {useState, useEffect, ChangeEvent} from 'react';\r\nimport './Login.css';\r\nimport {Grid, Box, Typography, TextField, Button} from '@material-ui/core';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport UserLogin from '../../models/UserLogin';\r\nimport {login} from '../../services/Service';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToken } from '../../store/user/actions';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Login() {\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [token, setToken] =  useState('');\r\n    const [userLogin, setUserLogin] = useState<UserLogin>(\r\n        {\r\n            id: 0,\r\n            usuario: '',\r\n            senha: '',\r\n            token: ''\r\n        })\r\n\r\n        function updatedModel(e: ChangeEvent <HTMLInputElement>){\r\n\r\n            setUserLogin({\r\n                ...userLogin,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n            useEffect(()=>{\r\n                if(token!=''){\r\n                    dispatch(addToken(token))\r\n                    history.push('/home')\r\n                }\r\n            },[token])\r\n        async function onSubmit(e: ChangeEvent <HTMLFormElement>){\r\n            e.preventDefault();\r\n            try{\r\n                await login(`/usuarios/logar`, userLogin, setToken)\r\n\r\n                toast.success('Usuário logado com sucesso', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme:\"colored\",\r\n                    progress: undefined,\r\n                })\r\n            } catch(error){\r\n                toast.error('Dados do usuario inconsistentes. Erro ao logar!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme:\"colored\",\r\n                    progress: undefined,\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n\r\n    return(\r\n        <Grid container direction='row' justifyContent='center' alignItems='center'>\r\n            <Grid xs={6} alignItems='center'>  \r\n                <Box paddingX={20}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='texto1'>\r\n                            Entrar\r\n                        </Typography>\r\n                        <TextField\r\n                            value={userLogin.usuario} \r\n                            onChange={(e: ChangeEvent<HTMLInputElement>)=> updatedModel(e)} \r\n                          id=\"usuario\"\r\n                          label=\"usuário\"\r\n                          variant='outlined'\r\n                          name='usuario'\r\n                          margin='normal'\r\n                          fullWidth\r\n                        />\r\n                        <TextField\r\n                            value={userLogin.senha} \r\n                            onChange={(e: ChangeEvent<HTMLInputElement>)=> updatedModel(e)} \r\n                          id=\"senha\"\r\n                          label=\"senha\"\r\n                          variant='outlined'\r\n                          name='senha'\r\n                          margin='normal'\r\n                          type='password'\r\n                          fullWidth\r\n                        />\r\n                        <Box marginTop={2} textAlign='center'>\r\n                            <Button type='submit' variant='contained' color='secondary'>\r\n                                Logar\r\n                            </Button>\r\n                        </Box>\r\n                    </form>\r\n                    <Box display='flex' justifyContent='center' marginTop={2}>\r\n                        <Box marginRight={1}>\r\n                            <Typography variant='subtitle1' gutterBottom align='center'> \r\n                                Não tem uma conta?\r\n                            </Typography>\r\n                        </Box>\r\n                        <Link to='/cadastrar' className='text-decorator-none'>\r\n                        <Typography variant='subtitle1' gutterBottom align='center' className='texto1'>\r\n                            Cadastre-se\r\n                        </Typography>\r\n                        </Link>\r\n                    </Box>\r\n                </Box>\r\n             </Grid>\r\n             <Grid xs={6} className='imagem'>\r\n\r\n             </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;","import React , {useState, useEffect, ChangeEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport User from '../../models/User';\r\nimport { cadastroUsuario } from '../../services/Service';\r\nimport { Grid, Box, Typography, Button, TextField } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport './CadastroUsuario.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CadastroUsuario() {\r\n    let history = useHistory();\r\n    const [confirmarSenha,setConfirmarSenha] = useState<String>(\"\")\r\n    const [user, setUser] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: ''\r\n        })\r\n\r\n    const [userResult, setUserResult] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: ''\r\n        })\r\n\r\n    useEffect(() => {\r\n        if (userResult.id != 0) {\r\n            history.push('/')\r\n        }\r\n    }, [userResult])\r\n\r\n\r\n    function confirmarSenhaHandle(e: ChangeEvent<HTMLInputElement>){\r\n        setConfirmarSenha(e.target.value)\r\n    }\r\n\r\n\r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n        if(confirmarSenha == user.senha){\r\n        cadastroUsuario(`/usuarios/cadastrar`, user, setUserResult)\r\n        toast.success('Usuário cadastrado com sucesso', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme:\"colored\",\r\n            progress: undefined,\r\n        })\r\n        }else{\r\n            toast.error('Dados inconsistentes. Favor verificar as informações de cadastro.', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme:\"colored\",\r\n                progress: undefined,\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <Grid container direction='row' justifyContent='center' alignItems='center'>\r\n            <Grid item xs={6} className='imagem2'></Grid>\r\n            <Grid item xs={6} alignItems='center'>\r\n                <Box paddingX={10}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='texto2'>\r\n                            Cadastrar\r\n                        </Typography>\r\n                        <TextField\r\n                        value={user.nome}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>)=> updatedModel(e)}\r\n                            id=\"nome\"\r\n                            label=\"nome\"\r\n                            variant='outlined'\r\n                            name='nome'\r\n                            margin='normal'\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                        value={user.usuario}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>)=> updatedModel(e)}\r\n                            id=\"usuario\"\r\n                            label=\"usuario\"\r\n                            variant='outlined'\r\n                            name='usuario'\r\n                            margin='normal'\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                        value={user.senha}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>)=> updatedModel(e)}\r\n                            id=\"senha\"\r\n                            label=\"senha\"\r\n                            variant='outlined'\r\n                            name='senha'\r\n                            margin='normal'\r\n                            type='password'\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                        value={confirmarSenha}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>)=> confirmarSenhaHandle(e)}\r\n                            id=\"confirmar senha\"\r\n                            label=\"confirmar senha\"\r\n                            variant='outlined'\r\n                            name='confirmar senha'\r\n                            margin='normal'\r\n                            type='password'\r\n                            fullWidth\r\n                        />\r\n                        <Box marginTop={2} textAlign='center'>\r\n                            <Link to='/logar' className='text-decorator-none'>\r\n                                <Button variant='contained' color='secondary' className='btnCancelar'>\r\n                                    Cancelar\r\n                                </Button>\r\n                            </Link>\r\n                            <Button type='submit' variant='contained' color='primary'>\r\n                                    Cadastrar\r\n                                </Button>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CadastroUsuario","import React, {useState, useEffect} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Box, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport './ListaTema.css';\r\nimport Tema from '../../../models/Tema';\r\nimport { busca } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../../store/user/userReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ListaTema() {\r\n\r\n  const [temas, setTemas] = useState<Tema[]>([])\r\n  let history = useHistory()\r\n  const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n    );\r\n\r\n  const tipo = useSelector<UserState, UserState[\"tipos\"]>(\r\n      (state) => state.tipos\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(token==''){\r\n      toast.error('Você precisa estar logado', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme:\"colored\",\r\n        progress: undefined,\r\n    })\r\n      history.push('/logar')\r\n    }\r\n  }, [token])\r\n\r\n  async function getTema(){\r\n    await busca('/tema', setTemas, {\r\n      headers:{'Authorization': token}\r\n    })\r\n  }\r\n\r\n  useEffect (()=>{\r\n    getTema()\r\n  },[temas.length])\r\n\r\n  var botoes :string\r\n  if (tipo != \"Admin\") {\r\n    botoes = \"bottom-none\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {\r\n      temas.map(tema =>(\r\n      <Box m={2} >\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Tema\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {tema.descricao}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1.5}>\r\n\r\n              <Link to={`/formularioTema/${tema.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                    atualizar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n              <Link to={`/deletarTema/${tema.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                    deletar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>  \r\n      ))\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default ListaTema;","import React, { useEffect, useState } from 'react'\r\nimport {Typography, Button, Box, Card, CardActions, CardContent } from \"@material-ui/core\"\r\nimport './DeletarPostagem.css';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../../store/user/userReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction DeletarPostagem() {\r\n  let history = useHistory();\r\n  const {id} = useParams<{id: string}>();\r\n  const [post, setPosts] = useState<Postagem>()\r\n  const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n    );\r\n\r\n  useEffect(() =>{\r\n      if(token== \"\"){\r\n        toast.error('Você precisa estar logado', {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: false,\r\n          draggable: false,\r\n          theme:\"colored\",\r\n          progress: undefined,\r\n      })\r\n          history.push('/login')\r\n      }\r\n  }, [token])\r\n\r\n  useEffect(()=>{\r\n      if(id !== undefined){\r\n          findById(id)\r\n      }\r\n  }, [id])\r\n\r\n  async function findById(id: string){\r\n      buscaId(`/postagens/${id}`, setPosts, { headers: {\r\n          'Authorization': token\r\n      }\r\n      })\r\n  }\r\n\r\n  function sim(){\r\n      history.push('/postagens')\r\n      deleteId(`/postagens/${id}`, {\r\n          headers: {\r\n              'Authorization': token\r\n          }\r\n      });\r\n      toast.success('Postagem deletada com sucesso', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme:\"colored\",\r\n        progress: undefined,\r\n    })\r\n  }\r\n\r\n  function nao() {\r\n      history.push('/postagens')\r\n  }\r\n   \r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\" >\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar a Postagem:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" >\r\n              {post?.titulo}\r\n              </Typography>\r\n            </Box>\r\n\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n              <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                Sim\r\n              </Button>\r\n              </Box>\r\n              <Box>\r\n              <Button onClick={nao}  variant=\"contained\" size='large' color=\"secondary\">\r\n                Não\r\n              </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarPostagem;","import React, { useEffect, useState } from 'react'\r\nimport {Box, Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\r\nimport './DeletarTema.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport Tema from '../../../models/Tema';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../../store/user/userReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction DeletarTema() {\r\n  \r\n    let history = useHistory();\r\n    const {id} = useParams<{id: string}>();\r\n    const [tema, setTema] = useState<Tema>()\r\n    const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n      (state) => state.tokens\r\n      );\r\n\r\n    useEffect(() =>{\r\n        if(token== \"\"){\r\n          toast.error('Você precisa estar logado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme:\"colored\",\r\n            progress: undefined,\r\n        })\r\n            history.push('/login')\r\n        }\r\n    }, [token])\r\n\r\n    useEffect(()=>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string){\r\n        buscaId(`/tema/${id}`, setTema, { headers: {\r\n            'Authorization': token\r\n        }\r\n        })\r\n    }\r\n\r\n    function sim(){\r\n        history.push('/tema')\r\n        deleteId(`/tema/${id}`, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        });\r\n        toast.success('Tema deletado com sucesso', {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: false,\r\n          draggable: false,\r\n          theme:\"colored\",\r\n          progress: undefined,\r\n      })\r\n    }\r\n\r\n    function nao() {\r\n        history.push('/tema')\r\n    }\r\n          \r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar o Tema:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {tema?.descricao}\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n                <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                  Sim\r\n                </Button>\r\n              </Box>\r\n              <Box mx={2}>\r\n                <Button onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                  Não\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarTema;","import React, {useState, useEffect, ChangeEvent} from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../services/Service';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../../store/user/userReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction CadastroTema() {\r\n\r\n    let history = useHistory();\r\n    const {id} = useParams<{id: string}>();\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n        );\r\n\r\n    useEffect(() =>{\r\n        if(token== \"\"){\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme:\"colored\",\r\n                progress: undefined,\r\n            })\r\n            history.push('/login')\r\n        }\r\n    }, [token])\r\n\r\n    useEffect(()=>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string){\r\n        buscaId(`/tema/${id}`, setTema, { headers: {\r\n            'Authorization': token\r\n        }\r\n        })\r\n    }\r\n\r\n    function updatedTema(e: ChangeEvent<HTMLInputElement>) {\r\n        setTema({\r\n            ... tema,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n        e.preventDefault()\r\n        console.log(\"tema \" + JSON.stringify(tema))\r\n        if(id!==undefined){\r\n            console.log(tema)\r\n            put(`/tema`, tema, setTema, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Tema atualizado com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme:\"colored\",\r\n                progress: undefined,\r\n            })\r\n        } else{\r\n            post(`/tema`, tema, setTema, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Tema cadastrado com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme:\"colored\",\r\n                progress: undefined,\r\n            })\r\n        }\r\n        back()\r\n    }\r\n    function back() {\r\n        history.push('/tema')\r\n    }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Qual o tema da sua história?</Typography>\r\n                <TextField value={tema.descricao} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)} id=\"descricao\" label=\"descricao\" variant=\"outlined\" name=\"descricao\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;","import {Action } from './actions';\r\n// adicione o atributo tipo no inicialState e UserState\r\nexport interface UserState {\r\n    tokens: string,\r\n    names: string,\r\n    tipos: string,\r\n}\r\n\r\nconst initialState = {\r\n    tokens: \"\",\r\n    names: \"\",\r\n    tipos: \"\",\r\n}\r\n\r\nexport const userReducer = (state: UserState = initialState, action: Action) =>{\r\n    switch (action.type){\r\n        case \"ADD_TOKEN\": {\r\n            return {tokens: action.payload, names: state.names, tipos: state.tipos};\r\n        }\r\n        case \"ADD_NAME\": {\r\n            return {names: action.payload, tokens: state.tokens, tipos: state.tipos};\r\n        }\r\n        // adicione o case addTipo\r\n        case \"ADD_TIPO\": {\r\n            return {tipos: action.payload, tokens: state.tokens,names: state.names};\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { userReducer } from './user/userReducer';\r\nimport {createStore} from 'redux';\r\n\r\n\r\nconst store = createStore(userReducer);\r\n\r\nexport default store;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/estaticos/navbar/Navbar';\nimport Footer from './components/estaticos/footer/Footer';\nimport './App.css';\nimport Home from './paginas/home/Home';\nimport Login from './paginas/login/Login';\nimport CadastroUsuario from './paginas/cadastroUsuario/CadastroUsuario';\nimport ListaTema from './components/temas/listatema/ListaTema';\nimport ListaPostagem from './components/postagens/listapostagem/ListaPostagem';\nimport CadastroPost from './components/postagens/cadastroPost/CadastroPost';\nimport DeletarPostagem from './components/postagens/deletarPostagem/DeletarPostagem';\nimport DeletarTema from './components/temas/deletarTema/DeletarTema';\nimport CadastroTema from './components/temas/cadastroTema/CadastroTema';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastContainer/>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n        <Switch>\n          <div style={{minHeight:'100vh'}}>\n          <Route exact path='/'>\n              <Login />\n            </Route>\n            <Route path='/logar'>\n              <Login />\n            </Route>\n            <Route path='/cadastrar'>\n              <CadastroUsuario />\n            </Route>\n            <Route path='/tema'>\n              <ListaTema />\n            </Route>\n            <Route path='/postagens'>\n              <ListaPostagem />\n            </Route>\n            <Route path='/home'>\n              <Home />\n            </Route>\n            <Route exact path='/formularioPostagem'>\n            <CadastroPost />\n          </Route>\n          <Route exact path='/formularioPostagem/:id'>\n            <CadastroPost />\n          </Route>\n          <Route exact path='/formularioTema'>\n            <CadastroTema />\n          </Route>\n          <Route exact path='/formularioTema/:id'>\n            <CadastroTema />\n          </Route>\n          <Route path='/deletarPostagem/:id'>\n            <DeletarPostagem />\n          </Route>\n          <Route path='/deletarTema/:id'>\n            <DeletarTema />\n          </Route>\n          </div>\n        </Switch>\n      <Footer/>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}